[
  // Paredit mode. An attempt to emulate the impecable taste of Emacs parentheses rules

  // ALWAYS Auto-pair brackets
  { "keys": ["("], "command": "insert_snippet", "args": {"contents": "($0)"}, "context":
    [
      { "key": "setting.paredit_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true }
    ]
  },
  { "keys": ["("], "command": "insert_snippet", "args": {"contents": "(${0:$SELECTION})"}, "context":
    [
      { "key": "setting.paredit_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
    ]
  },
  // Basically, just don't allow closing bracket to be entered by themselves.
  { "keys": [")"], "command": "run_macro_file", "args": {"file": "Packages/sublime-paredit/Paredit Closing Bracket.sublime-macro_"}},

  // Do allow closing brackets to do the "skip over".
  { "keys": [")"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
    [
      { "key": "setting.paredit_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^\\)", "match_all": true }
    ]
  },

  // Don't allow deletion of closing brackets with content
  { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "Packages/sublime-paredit/Paredit Delete Closing Bracket.sublime-macro_"}, "context":
    [
      { "key": "setting.paredit_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "preceding_text", "operator": "regex_contains", "operand": "\\((.*?)\\)$", "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^", "match_all": true }
    ]
  },
  // Don't allow deletion of opening brackets with content
  { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "Packages/sublime-paredit/Paredit Delete Opening Bracket.sublime-macro_"}, "context":
    [
      { "key": "setting.paredit_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "preceding_text", "operator": "regex_contains", "operand": "\\($", "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^(.*?)\\)", "match_all": true }
    ]
  },
  // Delete a set of empty brackets if cursor is to the right of closing bracket.
  { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "Packages/sublime-paredit/Paredit Delete Left Left.sublime-macro_"}, "context":
    [
      { "key": "setting.paredit_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "preceding_text", "operator": "regex_contains", "operand": "\\(\\)$", "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^", "match_all": true }
    ]
  },
  // Delete a set of empty brackets if cursor is between the brackets.
  { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "Packages/Default/Delete Left Right.sublime-macro"}, "context":
    [
      { "key": "setting.paredit_enabled", "operator": "equal", "operand": true },
      { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
      { "key": "preceding_text", "operator": "regex_contains", "operand": "\\($", "match_all": true },
      { "key": "following_text", "operator": "regex_contains", "operand": "^\\)", "match_all": true }
    ]
  },

  // Key binding for push bracket
  { "keys": ["super+shift+0"], "command": "paredit_push_bracket" },

  // Override auto_match_enabled's single quote matching
  { "keys": ["'"], "command": "insert_snippet", "args": {"contents": "'$0"}, "context":
    [
      { "key": "setting.paredit_dont_match_single_quotes", "operator": "equal", "operand": true }
    ]
  }

]